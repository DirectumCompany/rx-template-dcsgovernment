
// ==================================================================
// ProcessingRuleDocBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Server
{
    public class ProcessingRuleDocBaseFilter<T> :
      global::DirRX.DCTSIntegration.Server.ProcessingRuleDocBaseFilter<T>
      where T : class, global::GD.DCSGovernment.IProcessingRuleDocBase
    {
      private global::GD.DCSGovernment.IProcessingRuleDocBaseFilterState filter
      {
        get
        {
          return (GD.DCSGovernment.IProcessingRuleDocBaseFilterState)this.Filter;
        }
      }

      protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
      {
        return base.ApplyAppliedFilter(query);
      }

      public ProcessingRuleDocBaseFilter(global::GD.DCSGovernment.IProcessingRuleDocBaseFilterState filter)
      : base(filter)
      {
      }

      protected ProcessingRuleDocBaseFilter()
      {
      }
    }
      public class ProcessingRuleDocBaseUiFilter<T> :
        global::DirRX.DCTSIntegration.Server.ProcessingRuleDocBaseUiFilter<T>
        where T : class, global::GD.DCSGovernment.IProcessingRuleDocBase
      {
        protected override global::System.Linq.IQueryable<T> ApplyAppliedFilter(global::System.Linq.IQueryable<T> query)
        {
          return base.ApplyAppliedFilter(query);
        }
      }

    public class ProcessingRuleDocBaseSearchDialogModel : global::DirRX.DCTSIntegration.Server.ProcessingRuleDocBaseSearchDialogModel
        {
                  public override global::System.Int64? Id { get; protected set; }
                  public override global::System.String Name { get; protected set; }
                  public override global::System.String Note { get; protected set; }
                  public override global::System.String Line { get; protected set; }
                  public override global::System.String NamePattern { get; protected set; }
                  public override global::System.Int32? DeadlineInDays { get; protected set; }
                  public override global::System.Int32? DeadlineInHours { get; protected set; }
                  public override global::System.String TaskSubject { get; protected set; }


                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> CaptureService { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> Status { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IDocumentKind> DocumentKind { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Docflow.IApprovalRuleBase> ApprovalRule { get; protected set; }
                  public override global::System.Collections.Generic.IEnumerable<Sungero.Core.Enumeration> TaskType { get; protected set; }




                   [Sungero.Domain.Shared.HideInDevStudio()]
                   public new ProcessingRuleDocBasePerformersModel Performers { get { return (ProcessingRuleDocBasePerformersModel)base.Performers; } protected set { base.Performers = value; } }

        }

      public class ProcessingRuleDocBasePerformersModel : global::DirRX.DCTSIntegration.Server.ProcessingRuleDocBasePerformersModel
          {
                      [Sungero.Domain.Shared.HideInDevStudio()]
                      public override global::System.Int64? Id { get; protected set; }




         }





  [global::Sungero.Domain.Filter(typeof(global::GD.DCSGovernment.Server.ProcessingRuleDocBaseFilter<global::GD.DCSGovernment.IProcessingRuleDocBase>))]
  [global::Sungero.Domain.UiFilter(typeof(global::GD.DCSGovernment.Server.ProcessingRuleDocBaseUiFilter<global::GD.DCSGovernment.IProcessingRuleDocBase>))]

  public class ProcessingRuleDocBase :
    global::DirRX.DCTSIntegration.Server.ProcessingRuleDocBase, global::GD.DCSGovernment.IProcessingRuleDocBase
  {
    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("87a49efc-d63a-4f99-8185-6707d54f760e");

    public override global::System.Guid TypeGuid
    {
      get { return global::GD.DCSGovernment.Server.ProcessingRuleDocBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "GD.DCSGovernment.IProcessingRuleDocBase, Sungero.Domain.Interfaces"; }
    }

    public override string DisplayValue
    {
      get { return this.Name; }
      set { this.Name = value; }
    }

    public new virtual global::GD.DCSGovernment.IProcessingRuleDocBaseState State
    {
      get { return (global::GD.DCSGovernment.IProcessingRuleDocBaseState)base.State; }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::GD.DCSGovernment.Shared.ProcessingRuleDocBaseState(this);
    }

    public new virtual global::GD.DCSGovernment.IProcessingRuleDocBaseInfo Info
    {
      get { return (global::GD.DCSGovernment.IProcessingRuleDocBaseInfo)base.Info; }
    }

    public new virtual global::GD.DCSGovernment.IProcessingRuleDocBaseAccessRights AccessRights
    {
      get { return (global::GD.DCSGovernment.IProcessingRuleDocBaseAccessRights)base.AccessRights; }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::GD.DCSGovernment.Server.ProcessingRuleDocBaseAccessRights(this);
    }

    protected override global::Sungero.Domain.EntityFunctions CreateServerFunctions()
    {
      return new global::GD.DCSGovernment.Server.ProcessingRuleDocBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::GD.DCSGovernment.Shared.ProcessingRuleDocBaseFunctions(this);
    }

    protected override object CreateHandlers() {
      return new global::GD.DCSGovernment.ProcessingRuleDocBaseServerHandlers(this);
    }

    protected override object CreateSharedHandlers() {
      return new global::GD.DCSGovernment.ProcessingRuleDocBaseSharedHandlers(this);
    }






    private static global::Sungero.Domain.Shared.EnumerationItems _TaskTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
      global::DirRX.DCTSIntegration.Server.ProcessingRuleDocBase.TaskTypeItems,
      typeof(global::GD.DCSGovernment.ProcessingRuleDocBase.TaskType),
      typeof(global::GD.DCSGovernment.Server.ProcessingRuleDocBase),
      "TaskType");

    public static new global::Sungero.Domain.Shared.EnumerationItems TaskTypeItems
    {
      get { return global::GD.DCSGovernment.Server.ProcessingRuleDocBase._TaskTypeItems; }
    }

    public override global::Sungero.Domain.Shared.EnumerationItems TaskTypeAllowedItems
    {
      get { return global::GD.DCSGovernment.Server.ProcessingRuleDocBase.TaskTypeItems; }
    }





    protected override global::Sungero.Domain.Shared.IChildEntityCollection<global::DirRX.DCTSIntegration.IProcessingRuleBasePerformers> CreatePerformersCollection()
    {
      return new global::Sungero.Domain.ChildEntityCollection<global::GD.DCSGovernment.IProcessingRuleDocBasePerformers>() { RootEntity = this };
    }


    protected override global::Sungero.Domain.Shared.EntityCreatingFromServerHandler CreateCreatingFromServerHandler(
      global::Sungero.Domain.Shared.IEntity entitySource)
    {
      var instance = Sungero.Metadata.Services.AppliedTypesManager.CreateInstance("GD.DCSGovernment.ProcessingRuleDocBaseCreatingFromServerHandler", new object[] { (global::GD.DCSGovernment.IProcessingRuleDocBase)entitySource, this.Info });
      if (instance != null)
        return (global::Sungero.Domain.Shared.EntityCreatingFromServerHandler)instance;

      return new global::GD.DCSGovernment.ProcessingRuleDocBaseCreatingFromServerHandler((global::GD.DCSGovernment.IProcessingRuleDocBase)entitySource, this.Info);
    }

    #region Framework events




    #endregion


    public ProcessingRuleDocBase()
    {
    }

  }
}

// ==================================================================
// ProcessingRuleDocBaseHandlers.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment
{

  public partial class ProcessingRuleDocBaseFilteringServerHandler<T>
    : global::DirRX.DCTSIntegration.ProcessingRuleDocBaseFilteringServerHandler<T>  
    where T : class, global::GD.DCSGovernment.IProcessingRuleDocBase
  {
    private global::GD.DCSGovernment.IProcessingRuleDocBaseFilterState _filter
    {
      get
      {
        return (GD.DCSGovernment.IProcessingRuleDocBaseFilterState)this.Filter;
      }
    }

    public ProcessingRuleDocBaseFilteringServerHandler(global::GD.DCSGovernment.IProcessingRuleDocBaseFilterState filter)
    : base(filter)
    {
    }

    protected ProcessingRuleDocBaseFilteringServerHandler()
    {
    }

    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.FilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }


  }

  public partial class ProcessingRuleDocBaseUiFilteringServerHandler<T>
    : global::DirRX.DCTSIntegration.ProcessingRuleDocBaseUiFilteringServerHandler<T>
    where T : class, global::GD.DCSGovernment.IProcessingRuleDocBase
  {
    public override global::System.Linq.IQueryable<T> Filtering(global::System.Linq.IQueryable<T> query, global::Sungero.Domain.UiFilteringEventArgs e)
    {
      query = base.Filtering(query, e);
            return query;
    }
  }

  public partial class ProcessingRuleDocBaseSearchDialogServerHandler : global::DirRX.DCTSIntegration.ProcessingRuleDocBaseSearchDialogServerHandler
   {
     private global::GD.DCSGovernment.Server.ProcessingRuleDocBaseSearchDialogModel _dialog
     {
       get
       {
         return (global::GD.DCSGovernment.Server.ProcessingRuleDocBaseSearchDialogModel)this.Dialog;
       }
     }

     public ProcessingRuleDocBaseSearchDialogServerHandler(global::GD.DCSGovernment.Server.ProcessingRuleDocBaseSearchDialogModel dialog)
       : base(dialog)
     {
     }
   }

  public partial class ProcessingRuleDocBaseServerHandlers : global::DirRX.DCTSIntegration.ProcessingRuleDocBaseServerHandlers
  {
    private global::GD.DCSGovernment.IProcessingRuleDocBase _obj
    {
      get { return (global::GD.DCSGovernment.IProcessingRuleDocBase)this.Entity; }
    }

    public ProcessingRuleDocBaseServerHandlers(global::GD.DCSGovernment.IProcessingRuleDocBase entity)
      : base(entity)
    {
    }
  }

  public partial class ProcessingRuleDocBaseCreatingFromServerHandler : global::DirRX.DCTSIntegration.ProcessingRuleDocBaseCreatingFromServerHandler
  {
    private global::GD.DCSGovernment.IProcessingRuleDocBase _source
    {
      get { return (global::GD.DCSGovernment.IProcessingRuleDocBase)this.Source; }
    }

    private global::GD.DCSGovernment.IProcessingRuleDocBaseInfo _info
    {
      get { return (global::GD.DCSGovernment.IProcessingRuleDocBaseInfo)this._Info; }
    }

    public ProcessingRuleDocBaseCreatingFromServerHandler(global::GD.DCSGovernment.IProcessingRuleDocBase source, global::GD.DCSGovernment.IProcessingRuleDocBaseInfo info)
      : base(source, info)
    {
    }
  }

}

// ==================================================================
// ProcessingRuleDocBaseEventArgs.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Server
{
}

// ==================================================================
// ProcessingRuleDocBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Server
{
  public class ProcessingRuleDocBaseAccessRights : 
    DirRX.DCTSIntegration.Server.ProcessingRuleDocBaseAccessRights, GD.DCSGovernment.IProcessingRuleDocBaseAccessRights
  {

    public ProcessingRuleDocBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ProcessingRuleDocBaseTypeAccessRights : 
    DirRX.DCTSIntegration.Server.ProcessingRuleDocBaseTypeAccessRights, GD.DCSGovernment.IProcessingRuleDocBaseAccessRights
  {

    public ProcessingRuleDocBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}

// ==================================================================
// ProcessingRuleDocBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Server
{
    public class ProcessingRuleDocBaseRepositoryImplementer<T> : 
      global::DirRX.DCTSIntegration.Server.ProcessingRuleDocBaseRepositoryImplementer<T>,
      global::GD.DCSGovernment.IProcessingRuleDocBaseRepositoryImplementer<T>
      where T : global::GD.DCSGovernment.IProcessingRuleDocBase 
    {
       public new global::GD.DCSGovernment.IProcessingRuleDocBaseAccessRights AccessRights
       {
          get { return (global::GD.DCSGovernment.IProcessingRuleDocBaseAccessRights)base.AccessRights; }
       }

       public new global::GD.DCSGovernment.IProcessingRuleDocBaseInfo Info
       {
          get { return (global::GD.DCSGovernment.IProcessingRuleDocBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::GD.DCSGovernment.Server.ProcessingRuleDocBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ProcessingRuleDocBasePanelNavigationFilters.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Server
{
}

// ==================================================================
// ProcessingRuleDocBaseServerFunctions.g.cs
// ==================================================================

namespace GD.DCSGovernment.Server
{
  public partial class ProcessingRuleDocBaseFunctions : global::DirRX.DCTSIntegration.Server.ProcessingRuleDocBaseFunctions
  {
    private global::GD.DCSGovernment.IProcessingRuleDocBase _obj
    {
      get { return (global::GD.DCSGovernment.IProcessingRuleDocBase)this.Entity; }
    }

    public ProcessingRuleDocBaseFunctions(global::GD.DCSGovernment.IProcessingRuleDocBase entity) : base(entity) { }
  }
}

// ==================================================================
// ProcessingRuleDocBaseFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Functions
{
  internal static class ProcessingRuleDocBase
  {
    /// <redirect project="GD.DCSGovernment.Server" type="GD.DCSGovernment.Server.ProcessingRuleDocBaseFunctions" />
    internal static  void SendTasks(global::GD.DCSGovernment.IProcessingRuleDocBase processingRuleDocBase, global::Sungero.Domain.Shared.IEntity attachment)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)processingRuleDocBase).FunctionsContainer.ServerFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SendTasks", new System.Type[] { typeof(global::Sungero.Domain.Shared.IEntity) });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] { attachment });
    }

    /// <redirect project="GD.DCSGovernment.Shared" type="GD.DCSGovernment.Shared.ProcessingRuleDocBaseFunctions" />
    internal static  void SetRequiredProperties(global::GD.DCSGovernment.IProcessingRuleDocBase processingRuleDocBase)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)processingRuleDocBase).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetRequiredProperties", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }
    /// <redirect project="GD.DCSGovernment.Shared" type="GD.DCSGovernment.Shared.ProcessingRuleDocBaseFunctions" />
    internal static  void SetPropertiesVisibility(global::GD.DCSGovernment.IProcessingRuleDocBase processingRuleDocBase)
    {
      var __functions = ((global::Sungero.Domain.Shared.IEntityFunctions)processingRuleDocBase).FunctionsContainer.SharedFunctions;
      var __funcMethod = __functions.GetType().GetMethod("SetPropertiesVisibility", new System.Type[] {  });
    global::CommonLibrary.ReflectionExtensions.ReflectionInvoke(__funcMethod, __functions, new object[] {  });
    }

  }
}

// ==================================================================
// ProcessingRuleDocBaseServerPublicFunctions.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Server
{
  public class ProcessingRuleDocBaseServerPublicFunctions : global::GD.DCSGovernment.Server.IProcessingRuleDocBaseServerPublicFunctions
  {
  }
}

// ==================================================================
// ProcessingRuleDocBaseQueries.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Queries
{
  public class ProcessingRuleDocBase
  {
    private static global::Sungero.Domain.SqlQueryResolver resolver = new global::Sungero.Domain.SqlQueryResolver("GD.DCSGovernment.Server.ProcessingRuleDocBase.ProcessingRuleDocBaseQueries.xml", System.Reflection.Assembly.GetExecutingAssembly());
  }
}
