
// ==================================================================
// ProcessingRuleIncomingLetter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Client
{
  public class ProcessingRuleIncomingLetter :
    global::DirRX.DCTSIntegration.Client.ProcessingRuleIncomingLetter, global::GD.DCSGovernment.IProcessingRuleIncomingLetter
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("d0432c80-f060-494d-89dc-bfb89a1d828f");

    public override global::System.Guid TypeGuid
    {
      get { return global::GD.DCSGovernment.Client.ProcessingRuleIncomingLetter.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "GD.DCSGovernment.IProcessingRuleIncomingLetter, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::GD.DCSGovernment.IProcessingRuleIncomingLetterState State
    {
      get
      {
        return (global::GD.DCSGovernment.IProcessingRuleIncomingLetterState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::GD.DCSGovernment.Shared.ProcessingRuleIncomingLetterState(this);
    }

    public new global::GD.DCSGovernment.IProcessingRuleIncomingLetterInfo Info
    {
      get
      {
        return (global::GD.DCSGovernment.IProcessingRuleIncomingLetterInfo)base.Info;
      }
    }

    public new global::GD.DCSGovernment.IProcessingRuleIncomingLetterAccessRights AccessRights
    {
      get
      {
        return (global::GD.DCSGovernment.IProcessingRuleIncomingLetterAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::GD.DCSGovernment.Client.ProcessingRuleIncomingLetterAccessRights(this);
    }










    #endregion

    #region Methods

    protected override object CreateActionsHandlers()
    {
      return new global::GD.DCSGovernment.Client.ProcessingRuleIncomingLetterActions(this);
    }

    protected override object CreateCollectionActionsHandlers()
    {
      return new global::GD.DCSGovernment.Client.ProcessingRuleIncomingLetterCollectionActions();
    }

    protected override object CreateAnyChildEntityActionsHandlers()
    {
      return new global::GD.DCSGovernment.Client.ProcessingRuleIncomingLetterAnyChildEntityActions();
    }

    protected override object CreateAnyChildEntityCollectionActionsHandlers()
    {
      return new global::GD.DCSGovernment.Client.ProcessingRuleIncomingLetterAnyChildEntityCollectionActions();
    }


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::GD.DCSGovernment.Client.ProcessingRuleIncomingLetterFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::GD.DCSGovernment.Shared.ProcessingRuleIncomingLetterFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::GD.DCSGovernment.ProcessingRuleIncomingLetterClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::GD.DCSGovernment.ProcessingRuleIncomingLetterSharedHandlers(this);
    }

    #endregion

    #region Framework events






    #endregion

    #region Constructors






            protected override void InitPerformersCollectionProperty()
            {
              this._Performers = new global::Sungero.Domain.Client.ListProperty<global::GD.DCSGovernment.IProcessingRuleIncomingLetterPerformers>("Performers", this);
              this._Performers.ValueChanged += (sender, e) => { this.PerformersChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Performers);
              this.SetPerformersEventHandlers();
            }


    public ProcessingRuleIncomingLetter()
    {








    }

    #endregion

  }
}

// ==================================================================
// ProcessingRuleIncomingLetterPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Client
{
  public class ProcessingRuleIncomingLetterPresenter<T> :
    global::DirRX.DCTSIntegration.Client.ProcessingRuleIncomingLetterPresenter<T>
    where T : class, global::GD.DCSGovernment.IProcessingRuleIncomingLetter
  {
    #region Fields and properties




    #endregion

    #region Methods


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {
              this._ApprovalRuleCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IApprovalRuleBase>(() => this.Entity, typeof(T), "ApprovalRule");

              this._DocumentKindCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(() => this.Entity, typeof(T), "DocumentKind");

              this._CorrespondentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Parties.ICounterparty>(() => this.Entity.Id, typeof(T), "Correspondent");

              this._DepartmentCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IDepartment>(() => this.Entity.Id, typeof(T), "Department");


                        this._PerformersPerformerCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(GD.DCSGovernment.IProcessingRuleIncomingLetterPerformers), "Performer");



    }

    public ProcessingRuleIncomingLetterPresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ProcessingRuleIncomingLetterCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Client
{
  public class ProcessingRuleIncomingLetterCollectionPresenter<T> : 
    global::DirRX.DCTSIntegration.Client.ProcessingRuleIncomingLetterCollectionPresenter<T>
    where T: class, global::GD.DCSGovernment.IProcessingRuleIncomingLetter
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ProcessingRuleIncomingLetterCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ProcessingRuleIncomingLetterCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ProcessingRuleIncomingLetterCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ProcessingRuleIncomingLetterCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ProcessingRuleIncomingLetterRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Client
{ 
  public class ProcessingRuleIncomingLetterRepositoryImplementer<T> : 
      global::DirRX.DCTSIntegration.Client.ProcessingRuleIncomingLetterRepositoryImplementer<T>,
      global::GD.DCSGovernment.IProcessingRuleIncomingLetterRepositoryImplementer<T>
      where T : global::GD.DCSGovernment.IProcessingRuleIncomingLetter
    {
       public new global::GD.DCSGovernment.IProcessingRuleIncomingLetterAccessRights AccessRights
       {
          get { return (global::GD.DCSGovernment.IProcessingRuleIncomingLetterAccessRights)base.AccessRights; }
       }

       public new global::GD.DCSGovernment.IProcessingRuleIncomingLetterInfo Info
       {
          get { return (global::GD.DCSGovernment.IProcessingRuleIncomingLetterInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::GD.DCSGovernment.Client.ProcessingRuleIncomingLetterTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ProcessingRuleIncomingLetterAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Client
{
  public class ProcessingRuleIncomingLetterAccessRights : 
    DirRX.DCTSIntegration.Client.ProcessingRuleIncomingLetterAccessRights, GD.DCSGovernment.IProcessingRuleIncomingLetterAccessRights
  {

    public ProcessingRuleIncomingLetterAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ProcessingRuleIncomingLetterTypeAccessRights : 
    DirRX.DCTSIntegration.Client.ProcessingRuleIncomingLetterTypeAccessRights, GD.DCSGovernment.IProcessingRuleIncomingLetterAccessRights
  {

    public ProcessingRuleIncomingLetterTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
