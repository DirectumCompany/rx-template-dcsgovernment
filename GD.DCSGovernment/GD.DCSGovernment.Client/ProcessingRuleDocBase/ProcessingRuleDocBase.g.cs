
// ==================================================================
// ProcessingRuleDocBase.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Client
{
  public class ProcessingRuleDocBase :
    global::DirRX.DCTSIntegration.Client.ProcessingRuleDocBase, global::GD.DCSGovernment.IProcessingRuleDocBase
  {
    #region Fields and properties

    public static new readonly global::System.Guid ClassTypeGuid = global::System.Guid.Parse("87a49efc-d63a-4f99-8185-6707d54f760e");

    public override global::System.Guid TypeGuid
    {
      get { return global::GD.DCSGovernment.Client.ProcessingRuleDocBase.ClassTypeGuid; }
    }

    public override string TypeName
    {
      get { return "GD.DCSGovernment.IProcessingRuleDocBase, Sungero.Domain.Interfaces"; }
    }

      public override string DisplayValue
      {
        get { return this.Name; }
        set { this.Name = value; }
      }

      public override string DisplayPropertyName
      {
        get { return "Name"; }
      }


    public new global::GD.DCSGovernment.IProcessingRuleDocBaseState State
    {
      get
      {
        return (global::GD.DCSGovernment.IProcessingRuleDocBaseState)base.State;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityState CreateState()
    {
      return new global::GD.DCSGovernment.Shared.ProcessingRuleDocBaseState(this);
    }

    public new global::GD.DCSGovernment.IProcessingRuleDocBaseInfo Info
    {
      get
      {
        return (global::GD.DCSGovernment.IProcessingRuleDocBaseInfo)base.Info;
      }
    }

    public new global::GD.DCSGovernment.IProcessingRuleDocBaseAccessRights AccessRights
    {
      get
      {
        return (global::GD.DCSGovernment.IProcessingRuleDocBaseAccessRights)base.AccessRights;
      }
    }

    protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
    {
      return new global::GD.DCSGovernment.Client.ProcessingRuleDocBaseAccessRights(this);
    }


        private static global::Sungero.Domain.Shared.EnumerationItems _TaskTypeItems = new global::Sungero.Domain.Shared.EnumerationItems(
          global::DirRX.DCTSIntegration.Client.ProcessingRuleDocBase.TaskTypeItems,
          typeof(global::GD.DCSGovernment.ProcessingRuleDocBase.TaskType),
          typeof(global::GD.DCSGovernment.Client.ProcessingRuleDocBase),
          "TaskType");

        public static new global::Sungero.Domain.Shared.EnumerationItems TaskTypeItems
        {
          get { return global::GD.DCSGovernment.Client.ProcessingRuleDocBase._TaskTypeItems; }
        }

        public override global::Sungero.Domain.Shared.EnumerationItems TaskTypeAllowedItems
        {
          get { return global::GD.DCSGovernment.Client.ProcessingRuleDocBase.TaskTypeItems; }
        }










    #endregion

    #region Methods


    protected override global::Sungero.Domain.Client.EntityFunctions CreateClientFunctions()
    {
      return new global::GD.DCSGovernment.Client.ProcessingRuleDocBaseFunctions(this);
    }

    protected override global::Sungero.Domain.Shared.EntityFunctions CreateSharedFunctions()
    {
      return new global::GD.DCSGovernment.Shared.ProcessingRuleDocBaseFunctions(this);
    }
    protected override object CreateHandlers() {
      return new global::GD.DCSGovernment.ProcessingRuleDocBaseClientHandlers(this);
    }
    protected override object CreateSharedHandlers() {
      return new global::GD.DCSGovernment.ProcessingRuleDocBaseSharedHandlers(this);
    }

    #endregion

    #region Framework events






    #endregion

    #region Constructors




            protected override void InitPerformersCollectionProperty()
            {
              this._Performers = new global::Sungero.Domain.Client.ListProperty<global::GD.DCSGovernment.IProcessingRuleDocBasePerformers>("Performers", this);
              this._Performers.ValueChanged += (sender, e) => { this.PerformersChangedHandler(); };
              this.AddProperty((global::Sungero.Domain.Client.IProperty)this._Performers);
              this.SetPerformersEventHandlers();
            }


    public ProcessingRuleDocBase()
    {








    }

    #endregion

  }
}

// ==================================================================
// ProcessingRuleDocBasePresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Client
{
  public class ProcessingRuleDocBasePresenter<T> :
    global::DirRX.DCTSIntegration.Client.ProcessingRuleDocBasePresenter<T>
    where T : class, global::GD.DCSGovernment.IProcessingRuleDocBase
  {
    #region Fields and properties




    #endregion

    #region Methods


    #endregion

    #region Framework events

    protected override void EntityPropertyChangedEventHandler(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
    {
      base.EntityPropertyChangedEventHandler(sender, e);
    }

    #endregion



    #region Constructors

    private void Init()
    {
              this._DocumentKindCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IDocumentKind>(() => this.Entity, typeof(T), "DocumentKind");

              this._ApprovalRuleCollectionPresenter
              .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationProperty<global::Sungero.Docflow.IApprovalRuleBase>(() => this.Entity, typeof(T), "ApprovalRule");


                        this._PerformersPerformerCollectionPresenter
                        .Query = global::Sungero.Domain.Client.Session.GetValuesForNavigationPropertyWithoutSourceEntity<global::Sungero.Company.IEmployee>(() => this.Entity.Id, typeof(GD.DCSGovernment.IProcessingRuleDocBasePerformers), "Performer");



    }

    public ProcessingRuleDocBasePresenter()
    {
      this.Init();
    }

    #endregion
  }
}

// ==================================================================
// ProcessingRuleDocBaseCollectionPresenter.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Client
{
  public class ProcessingRuleDocBaseCollectionPresenter<T> : 
    global::DirRX.DCTSIntegration.Client.ProcessingRuleDocBaseCollectionPresenter<T>
    where T: class, global::GD.DCSGovernment.IProcessingRuleDocBase
  {
    #region Actions



    #endregion

    #region Methods


    #endregion

    public ProcessingRuleDocBaseCollectionPresenter(global::System.Linq.IQueryable<T> query, OnLookup onLookup)
      : base(query, onLookup)
    {
    }

    public ProcessingRuleDocBaseCollectionPresenter(global::System.Linq.IQueryable<T> query)
      : this(query, null) { }

    public ProcessingRuleDocBaseCollectionPresenter(OnLookup onLookup)
      : this(null, onLookup) { }

    public ProcessingRuleDocBaseCollectionPresenter()
      : this(null, null) { }
  }
}

// ==================================================================
// ProcessingRuleDocBaseRepositoryImplementer.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Client
{ 
  public class ProcessingRuleDocBaseRepositoryImplementer<T> : 
      global::DirRX.DCTSIntegration.Client.ProcessingRuleDocBaseRepositoryImplementer<T>,
      global::GD.DCSGovernment.IProcessingRuleDocBaseRepositoryImplementer<T>
      where T : global::GD.DCSGovernment.IProcessingRuleDocBase
    {
       public new global::GD.DCSGovernment.IProcessingRuleDocBaseAccessRights AccessRights
       {
          get { return (global::GD.DCSGovernment.IProcessingRuleDocBaseAccessRights)base.AccessRights; }
       }

       public new global::GD.DCSGovernment.IProcessingRuleDocBaseInfo Info
       {
          get { return (global::GD.DCSGovernment.IProcessingRuleDocBaseInfo)base.Info; }
       }

       protected override global::Sungero.Domain.Shared.IEntityAccessRights CreateAccessRights()
       {
         return new global::GD.DCSGovernment.Client.ProcessingRuleDocBaseTypeAccessRights(typeof(T));
       }
    }
}

// ==================================================================
// ProcessingRuleDocBaseAccessRights.g.cs
// ==================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GD.DCSGovernment.Client
{
  public class ProcessingRuleDocBaseAccessRights : 
    DirRX.DCTSIntegration.Client.ProcessingRuleDocBaseAccessRights, GD.DCSGovernment.IProcessingRuleDocBaseAccessRights
  {

    public ProcessingRuleDocBaseAccessRights(global::Sungero.Domain.Shared.IEntity entity) : base(entity)
    {
    }
  }

  public class ProcessingRuleDocBaseTypeAccessRights : 
    DirRX.DCTSIntegration.Client.ProcessingRuleDocBaseTypeAccessRights, GD.DCSGovernment.IProcessingRuleDocBaseAccessRights
  {

    public ProcessingRuleDocBaseTypeAccessRights(global::System.Type entityType) : base(entityType)
    {
    }
  }
}
